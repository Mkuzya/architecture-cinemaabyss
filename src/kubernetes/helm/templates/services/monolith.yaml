{{- if .Values.monolith.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: monolith
  namespace: {{ .Values.global.namespace }}
  labels:
    app: monolith
    app.kubernetes.io/name: {{ include "cinemaabyss.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
spec:
  replicas: {{ .Values.monolith.replicas }}
  selector:
    matchLabels:
      app: monolith
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: monolith
    spec:
      containers:
      - name: monolith
        image: {{ .Values.monolith.image.repository }}:{{ .Values.monolith.image.tag }}
        imagePullPolicy: {{ .Values.monolith.image.pullPolicy }}
        ports:
        - containerPort: {{ .Values.monolith.service.targetPort }}
        # No environment variables for nginx container
        resources:
          {{- toYaml .Values.monolith.resources | nindent 10 }}
        env:
        - name: PORT
          value: "{{ .Values.monolith.service.targetPort }}"
        - name: DB_CONNECTION_STRING
          value: "postgres://{{ .Values.database.user }}:{{ .Values.database.password }}@{{ .Values.database.host }}:{{ .Values.database.port }}/{{ .Values.database.name }}?sslmode=disable"
        readinessProbe:
          httpGet:
            path: /health
            port: {{ .Values.monolith.service.targetPort }}
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        livenessProbe:
          httpGet:
            path: /health
            port: {{ .Values.monolith.service.targetPort }}
          initialDelaySeconds: 60
          periodSeconds: 15
          timeoutSeconds: 5
          failureThreshold: 3
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: monolith
  namespace: {{ .Values.global.namespace }}
  labels:
    app: monolith
    app.kubernetes.io/name: {{ include "cinemaabyss.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
spec:
  selector:
    app: monolith
  ports:
  - port: {{ .Values.monolith.service.port }}
    targetPort: {{ .Values.monolith.service.targetPort }}
  type: {{ .Values.monolith.service.type }}
{{- end }}