name: Helm Deployment Test

on:
  workflow_dispatch:
  push:
    branches: [ main, dev ]
    paths:
      - 'src/kubernetes/**'
      - '.github/workflows/helm-test.yml'
  pull_request:
    branches: [ main, dev ]
    paths:
      - 'src/kubernetes/**'

jobs:
  helm-test:
    name: Test Helm Deployment
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Minikube
        uses: medyagh/setup-minikube@master
        with:
          driver: docker
          kubernetes-version: 'v1.25.0'

      - name: Install Helm
        uses: azure/setup-helm@v3
        with:
          version: 'v3.12.0'

      - name: Start Minikube
        run: |
          minikube start --driver=docker --memory=4096 --cpus=2
          minikube status
          
          echo "Checking Minikube resources..."
          kubectl get nodes -o wide
          kubectl describe node minikube | grep -A 10 "Allocated resources"
          
      - name: Wait for Docker images
        run: |
          echo "Waiting for Docker images to be available..."
          # Check if required images are available
          docker pull ghcr.io/${{ github.repository }}/monolith:latest || echo "Monolith image not ready"
          docker pull ghcr.io/${{ github.repository }}/movies-service:latest || echo "Movies service image not ready"
          docker pull ghcr.io/${{ github.repository }}/events-service:latest || echo "Events service image not ready"
          docker pull ghcr.io/${{ github.repository }}/proxy-service:latest || echo "Proxy service image not ready"

      - name: Test Helm Chart
        run: |
          echo "Testing Helm chart syntax..."
          helm lint ./src/kubernetes/helm
          
          echo "Testing Helm template rendering..."
          helm template cinemaabyss ./src/kubernetes/helm --dry-run
          
          echo "Testing Helm installation..."
          helm install cinemaabyss ./src/kubernetes/helm --dry-run

      - name: Deploy to Minikube
        run: |
          echo "Creating namespace if not exists..."
          kubectl create namespace cinemaabyss --dry-run=client -o yaml | kubectl apply -f -
          
          echo "Deploying Helm chart to Minikube..."
          helm install cinemaabyss ./src/kubernetes/helm
          
          echo "Waiting for pods to be created..."
          # Wait for pods to be created first
          sleep 30
          
          echo "Checking initial pod status..."
          kubectl get pods -n cinemaabyss
          
          echo "Waiting for pods to be ready..."
          # Wait for pods with better error handling
          kubectl wait --for=condition=ready pod -l app.kubernetes.io/instance=cinemaabyss -n cinemaabyss --timeout=300s || echo "Some pods may still be starting"
          
          echo "Checking final pod status..."
          kubectl get pods -n cinemaabyss
          
          echo "Checking services..."
          kubectl get services -n cinemaabyss
          
          
      - name: Test Service Connectivity
        run: |
          echo "Testing service connectivity..."
          # Wait for services to be ready
          sleep 60
          
          # Check if all pods are running
          echo "Checking pod status after waiting..."
          kubectl get pods -n cinemaabyss -o wide
          
          # Count running pods
          RUNNING_PODS=$(kubectl get pods -n cinemaabyss --no-headers | grep -c "Running")
          TOTAL_PODS=$(kubectl get pods -n cinemaabyss --no-headers | wc -l)
          
          echo "Running pods: $RUNNING_PODS out of $TOTAL_PODS"
          
          # More detailed pod status check
          echo "Detailed pod status:"
          kubectl get pods -n cinemaabyss --no-headers | while read line; do
            echo "  $line"
          done
          
          if [ "$RUNNING_PODS" -gt 0 ]; then
            echo "✅ Helm deployment test completed successfully!"
            echo "✅ At least $RUNNING_PODS pods are running out of $TOTAL_PODS total"
          else
            echo "❌ No pods are running, deployment may have failed"
            echo "❌ Checking pod events for debugging..."
            kubectl get events -n cinemaabyss --sort-by='.lastTimestamp'
            exit 1
          fi

      - name: Cleanup
        if: always()
        run: |
          echo "Cleaning up Helm deployment..."
          helm uninstall cinemaabyss || true
          minikube stop || true
